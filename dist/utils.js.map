{"version":3,"sources":["../src/utils.js"],"names":["appEvents","hostname","window","location","postgRestHost","influxHost","post","url","line","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","handleResponse","onerror","e","send","readyState","status","res","JSON","parse","responseText","statusText","get","alert","type","title","msg","emit"],"mappings":";;;;;;;;AAASA,e,gBAAAA,S;;;AAEHC,c,GAAWC,OAAOC,QAAP,CAAgBF,Q;;+BAC3BG,a,GAAgB,YAAYH,QAAZ,GAAuB,Q;;4BACvCI,U,GAAa,YAAYJ,QAAZ,GAAuB,Q;;sBAEtCK,I,GAAO,SAAPA,IAAO,CAACC,GAAD,EAAMC,IAAN,EAAe;AACtB,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,cAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,cAAIE,IAAJ,CAAS,MAAT,EAAiBP,GAAjB;AACAK,cAAIG,kBAAJ,GAAyBC,cAAzB;AACAJ,cAAIK,OAAJ,GAAc;AAAA,mBAAKN,OAAOO,CAAP,CAAL;AAAA,WAAd;AACAN,cAAIO,IAAJ,CAASX,IAAT;;AAEA,mBAASQ,cAAT,GAA2B;AACzB,gBAAIJ,IAAIQ,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,kBAAIR,IAAIS,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,oBAAIC,MAAMC,KAAKC,KAAL,CAAWZ,IAAIa,YAAf,CAAV;AACAf,wBAAQY,GAAR;AACD,eAJD,MAIO,IAAIV,IAAIS,MAAJ,KAAe,GAAnB,EAAwB;AAC7B;AACAC,sBAAMV,IAAIa,YAAV;AACAf,wBAAQY,GAAR;AACD,eAJM,MAIA;AACLX,uBAAO,KAAKe,UAAZ;AACD;AACF;AACF;AACF,SAtBM,CAAP;AAuBD,O;;qBAEGC,G,GAAM,SAANA,GAAM,MAAO;AACf,eAAO,IAAIlB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,cAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,cAAIE,IAAJ,CAAS,KAAT,EAAgBP,GAAhB;AACAK,cAAIG,kBAAJ,GAAyBC,cAAzB;AACAJ,cAAIK,OAAJ,GAAc;AAAA,mBAAKN,OAAOO,CAAP,CAAL;AAAA,WAAd;AACAN,cAAIO,IAAJ;;AAEA,mBAASH,cAAT,GAA2B;AAC3B,gBAAIJ,IAAIQ,UAAJ,KAAmB,CAAvB,EAA0B;AACtB,kBAAIR,IAAIS,MAAJ,KAAe,GAAnB,EAAwB;AACtB,oBAAIC,MAAMC,KAAKC,KAAL,CAAWZ,IAAIa,YAAf,CAAV;AACFf,wBAAQY,GAAR;AACC,eAHD,MAGO;AACLX,uBAAO,KAAKe,UAAZ;AACD;AACJ;AACA;AACJ,SAjBM,CAAP;AAkBD,O;;uBAEKE,K,GAAQ,SAARA,KAAQ,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAsB;AAChC/B,kBAAUgC,IAAV,CAAe,WAAWH,IAA1B,EAAgC,CAACC,KAAD,EAAQC,GAAR,CAAhC;AACH,O;;sBAEQzB,I;;qBAAMqB,G;;+BAAKvB,a;;4BAAeC,U;;uBAAYuB,K","file":"utils.js","sourcesContent":["import { appEvents } from 'app/core/core'\n\nconst hostname = window.location.hostname\nconst postgRestHost = 'http://' + hostname + ':5436/'\nconst influxHost = 'http://' + hostname + ':8086/'\n\nlet post = (url, line) => {\n    return new Promise((resolve, reject) => {\n      var xhr = new XMLHttpRequest()\n      xhr.open('POST', url)\n      xhr.onreadystatechange = handleResponse\n      xhr.onerror = e => reject(e)\n      xhr.send(line)\n  \n      function handleResponse () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            // console.log('200');\n            var res = JSON.parse(xhr.responseText)\n            resolve(res)\n          } else if (xhr.status === 204) {\n            // console.log('204');\n            res = xhr.responseText\n            resolve(res)\n          } else {\n            reject(this.statusText)\n          }\n        }\n      }\n    })\n  }\n\n  let get = url => {\n    return new Promise((resolve, reject) => {\n        var xhr = new XMLHttpRequest()\n        xhr.open('GET', url)\n        xhr.onreadystatechange = handleResponse\n        xhr.onerror = e => reject(e)\n        xhr.send()\n\n        function handleResponse () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              var res = JSON.parse(xhr.responseText)\n            resolve(res)\n            } else {\n              reject(this.statusText)            \n            }\n        }\n        }\n    })\n  }\n\n  const alert = (type, title, msg) => {\n      appEvents.emit('alert-' + type, [title, msg])\n  }\n\n  export { post, get, postgRestHost, influxHost, alert }"]}